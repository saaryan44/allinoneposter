{"version":3,"sources":["Home.jsx","App.jsx","index.js"],"names":["Home","useState","name","email","stuff","thispost","mm","nn","sendpost","dw","a","preventDefault","fetch","method","headers","body","JSON","stringify","hy","json","hh","alert","message","thepla","ym","hmm","posts","useEffect","style","float","autocomplete","onSubmit","cols","rows","placeholder","onChange","dqq","target","value","type","listStyleType","map","d","toString","Login","password","cola","mola","history","useHistory","ux","mx","f","yo","gg","ok","push","id","Index","login","showlogin","gamma","alpha","fx","s","am","bm","gx","dd","onClick","App","path","exact","component","rd","render","document","getElementById"],"mappings":"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","file":"static/js/main.c78199c5.chunk.js","sourcesContent":["import  {useState,useEffect} from 'react';\r\n\r\nconst Home=()=>{ const [mm,nn]=useState({name:\"\",email:\"\",stuff:[],thispost:\"\"});const sendpost=async (dw)=>{dw.preventDefault(); const hy=await fetch('/home',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({thispost:mm.thispost})}); const hh=await hy.json(); if(hh){alert(hh.message); nn({...mm,stuff:[...mm.stuff,mm.thispost]});}else{alert('error in posting');}}; const thepla =async ()=>{const ym=await fetch('/home',{method:'GET',headers:{'Content-Type':'application/json'}}); const hmm=await ym.json(); nn({name:hmm.name,email:hmm.email,stuff:hmm.posts});};useEffect(()=>thepla(),[]);return(<div><h1>hi {mm.name}</h1><h5 style={{float:\"right\"}}>logged in as {mm.email}</h5><hr /><div><form method=\"post\" autocomplete=\"off\" onSubmit={sendpost}><textarea cols=\"34\" rows=\"14\" placeholder=\"what's on your mind? \" onChange={(dqq)=>nn({...mm,thispost:dqq.target.value})} /><input type=\"submit\" value=\"post\" /></form></div><hr /><ol style={{listStyleType:\"upper-alpha\"}}>{mm.stuff.map(d=><li>{d.toString()}</li>)}</ol></div>);};\r\n\r\n\r\nexport default Home;","import {useState} from 'react';\r\nimport {Route,Switch,useHistory} from 'react-router-dom';\r\nimport Home from './Home';\r\nconst Login=()=>{const [cola,mola]=useState({email:\"\",password:\"\"});const history=useHistory(); const ux=(dw)=>{mola({...cola,[dw.target.name]:dw.target.value})};const mx=async (f)=>{f.preventDefault(); const yo=await fetch('/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:cola.email,password:cola.password})});  const gg=await yo.json(); if(gg.ok){alert(`hello ${gg.name}!`); history.push('/home'); }else{alert('failed to login. try again.');} };return(<div id=\"form\"><form onSubmit={mx} autocomplete=\"off\" method=\"post\"><input type=\"email\" name=\"email\" placeholder=\"email\" value={cola.email} onChange={ux} /><input type=\"password\" name=\"password\" placeholder=\"password\" value={cola.password} onChange={ux} /><input type=\"submit\" value=\"login\" /></form> </div>);};\r\n\r\nconst Index=()=>{ const [login,showlogin]=useState(false);const [gamma,alpha]=useState({name:\"\",password:\"\",email:\"\"}); const fx=async (s)=>{s.preventDefault(); const am=await fetch('/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name:gamma.name,email:gamma.email,password:gamma.password})}); const bm=await am.json(); if(bm.ok){alert(`logged in successfully, ${gamma.email}`);}else{alert(`problem in logging in. try again. \\n ${bm.message}`);}}; const gx=(dd)=>{alpha({...gamma,[dd.target.name]:dd.target.value});}; return(<div><form method=\"post\" onSubmit={fx} ><input type=\"text\" placeholder=\"name\" name=\"name\" value={gamma.name}  onChange={gx}/><input type=\"text\" placeholder=\"email\" name=\"email\" value={gamma.email}  onChange={gx}/><input type=\"password\" placeholder=\"password\" name=\"password\" value={gamma.password}  onChange={gx}/><input type=\"submit\" value=\"register\"/></form><hr /><h4>Toggle <button onClick={()=>showlogin(!login)}>Log in </button> here</h4><section>{login && <Login />}</section></div>);};\r\n\r\nconst App=()=>{return(<div><Switch><Route path=\"/\" exact component={Index} /><Route path=\"/home\" component={Home} /></Switch></div>);};\r\n\r\nexport default App;","import App from './App';\r\nimport rd from 'react-dom';\r\nimport {BrowserRouter } from 'react-router-dom';\r\nrd.render(<BrowserRouter><App /></BrowserRouter>,document.getElementById('root'));"],"sourceRoot":""}